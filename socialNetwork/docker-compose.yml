version: "3.9"
services:

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   hostname: cadvisor
  #   container_name: cadvisor
  #   restart: always
  #   ports:
  #   - 8082:8080
  #   volumes:
  #   - /:/rootfs:ro
  #   - /var/run:/var/run:rw
  #   - /sys:/sys:ro
  #   - /var/lib/docker/:/var/lib/docker:ro
  #   # depends_on:
  #   # - redis

  social-graph-service-alertmanager:
    image: prom/alertmanager
    hostname: social-graph-service-alertmanager
    container_name: social-graph-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/social-graph-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9223:9093"

  social-graph-service-prometheus:
    image: prom/prometheus
    hostname: social-graph-service-prometheus
    container_name: social-graph-service-prometheus
    restart: always
    ports:
      - "9104:9090"
    volumes:
      - ./prometheus/social-graph-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  social-graph-service-exporter:
    image: prom/node-exporter:latest
    hostname: social-graph-service-exporter
    container_name: social-graph-service-exporter
    restart: always
    ports:
      - '9301:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  social-graph-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: social-graph-service
    container_name: social-graph-service
    #    ports:
    #      - 10000:9090
    depends_on:
      jaeger-agent:
        condition: service_started
      social-graph-mongodb:
        condition: service_started
    restart: always
    entrypoint: SocialGraphService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  compose-post-service-alertmanager:
    image: prom/alertmanager
    hostname: compose-post-service-alertmanager
    container_name: compose-post-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/compose-post-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9224:9093"

  compose-post-service-prometheus:
    image: prom/prometheus
    hostname: compose-post-service-prometheus
    container_name: compose-post-service-prometheus
    restart: always
    ports:
      - "9105:9090"
    volumes:
      - ./prometheus/compose-post-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  compose-post-service-exporter:
    image: prom/node-exporter:latest
    hostname: compose-post-service-exporter
    container_name: compose-post-service-exporter
    restart: always
    ports:
      - '9302:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  compose-post-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: compose-post-service
    container_name: compose-post-service
    #    ports:
    #      - 10001:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
    entrypoint: ComposePostService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  post-storage-service-alertmanager:
    image: prom/alertmanager
    hostname: post-storage-service-alertmanager
    container_name: post-storage-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/post-storage-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9225:9093"

  post-storage-service-prometheus:
    image: prom/prometheus
    hostname: post-storage-service-prometheus
    container_name: post-storage-service-prometheus
    restart: always
    ports:
      - "9106:9090"
    volumes:
      - ./prometheus/post-storage-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  post-storage-service-exporter:
    image: prom/node-exporter:latest
    hostname: post-storage-service-exporter
    container_name: post-storage-service-exporter
    restart: always
    ports:
      - '9303:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  post-storage-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: post-storage-service
    container_name: post-storage-service
    ports:
      - 10002:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
      post-storage-mongodb:
        condition: service_started
    entrypoint: PostStorageService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  user-timeline-service-alertmanager:
    image: prom/alertmanager
    hostname: user-timeline-service-alertmanager
    container_name: user-timeline-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/user-timeline-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9226:9093"

  user-timeline-service-prometheus:
    image: prom/prometheus
    hostname: user-timeline-service-prometheus
    container_name: user-timeline-service-prometheus
    restart: always
    ports:
      - "9107:9090"
    volumes:
      - ./prometheus/user-timeline-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  user-timeline-service-exporter:
    image: prom/node-exporter:latest
    hostname: user-timeline-service-exporter
    container_name: user-timeline-service-exporter
    restart: always
    ports:
      - '9304:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  user-timeline-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: user-timeline-service
    container_name: user-timeline-service
    #    ports:
    #      - 10003:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
      user-timeline-mongodb:
        condition: service_started
    entrypoint: UserTimelineService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  url-shorten-service-alertmanager:
    image: prom/alertmanager
    hostname: url-shorten-service-alertmanager
    container_name: url-shorten-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/url-shorten-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9227:9093"

  url-shorten-service-prometheus:
    image: prom/prometheus
    hostname: url-shorten-service-prometheus
    container_name: url-shorten-service-prometheus
    restart: always
    ports:
      - "9108:9090"
    volumes:
      - ./prometheus/url-shorten-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  url-shorten-service-exporter:
    image: prom/node-exporter:latest
    hostname: url-shorten-service-exporter
    container_name: url-shorten-service-exporter
    restart: always
    ports:
      - '9305:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  url-shorten-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: url-shorten-service
    container_name: url-shorten-service
    #    ports:
    #      - 10004:9090
    restart: always
    entrypoint: UrlShortenService
    depends_on:
      jaeger-agent:
        condition: service_started
      url-shorten-mongodb:
        condition: service_started
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  user-service-alertmanager:
    image: prom/alertmanager
    hostname: user-service-alertmanager
    container_name: user-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/user-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9228:9093"

  user-service-prometheus:
    image: prom/prometheus
    hostname: user-service-prometheus
    container_name: user-service-prometheus
    restart: always
    ports:
      - "9109:9090"
    volumes:
      - ./prometheus/user-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  user-service-exporter:
    image: prom/node-exporter:latest
    hostname: user-service-exporter
    container_name: user-service-exporter
    restart: always
    ports:
      - '9306:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  user-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: user-service
    container_name: user-service
    #    ports:
    #      - 10005:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
      user-mongodb:
        condition: service_started
    entrypoint: UserService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  media-service-alertmanager:
    image: prom/alertmanager
    hostname: media-service-alertmanager
    container_name: media-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/media-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9229:9093"

  media-service-prometheus:
    image: prom/prometheus
    hostname: media-service-prometheus
    container_name: media-service-prometheus
    restart: always
    ports:
      - "9110:9090"
    volumes:
      - ./prometheus/media-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  media-service-exporter:
    image: prom/node-exporter:latest
    hostname: media-service-exporter
    container_name: media-service-exporter
    restart: always
    ports:
      - '9307:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  media-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: media-service
    container_name: media-service
    #    ports:
    #      - 10006:9090
    depends_on:
      jaeger-agent:
        condition: service_started
      media-mongodb:
        condition: service_started
    restart: always
    entrypoint: MediaService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  text-service-alertmanager:
    image: prom/alertmanager
    hostname: text-service-alertmanager
    container_name: text-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/text-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9230:9093"

  text-service-prometheus:
    image: prom/prometheus
    hostname: text-service-prometheus
    container_name: text-service-prometheus
    restart: always
    ports:
      - "9111:9090"
    volumes:
      - ./prometheus/text-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  text-service-exporter:
    image: prom/node-exporter:latest
    hostname: text-service-exporter
    container_name: text-service-exporter
    restart: always
    ports:
      - '9308:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  text-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: text-service
    container_name: text-service
    #    ports:
    #      - 10007:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
    entrypoint: TextService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  unique-id-service-alertmanager:
    image: prom/alertmanager
    hostname: unique-id-service-alertmanager
    container_name: unique-id-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/unique-id-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9231:9093"

  unique-id-service-prometheus:
    image: prom/prometheus
    hostname: unique-id-service-prometheus
    container_name: unique-id-service-prometheus
    restart: always
    ports:
      - "9112:9090"
    volumes:
      - ./prometheus/unique-id-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  unique-id-service-exporter:
    image: prom/node-exporter:latest
    hostname: unique-id-service-exporter
    container_name: unique-id-service-exporter
    restart: always
    ports:
      - '9309:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  unique-id-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: unique-id-service
    container_name: unique-id-service
    #    ports:
    #      - 10008:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
    entrypoint: UniqueIdService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  user-mention-service-alertmanager:
    image: prom/alertmanager
    hostname: user-mention-service-alertmanager
    container_name: user-mention-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/user-mention-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9232:9093"

  user-mention-service-prometheus:
    image: prom/prometheus
    hostname: user-mention-service-prometheus
    container_name: user-mention-service-prometheus
    restart: always
    ports:
      - "9113:9090"
    volumes:
      - ./prometheus/user-mention-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  user-mention-service-exporter:
    image: prom/node-exporter:latest
    hostname: user-mention-service-exporter
    container_name: user-mention-service-exporter
    restart: always
    ports:
      - '9310:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  user-mention-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: user-mention-service
    container_name: user-mention-service
    #    ports:
    #      - 10009:9090
    depends_on:
      jaeger-agent:
        condition: service_started
    restart: always
    entrypoint: UserMentionService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  home-timeline-service-alertmanager:
    image: prom/alertmanager
    hostname: home-timeline-service-alertmanager
    container_name: home-timeline-service-alertmanager
    restart: always
    volumes:
      - ./alertmanager/home-timeline-service-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9233:9093"

  home-timeline-service-prometheus:
    image: prom/prometheus
    hostname: home-timeline-service-prometheus
    container_name: home-timeline-service-prometheus
    restart: always
    ports:
      - "9114:9090"
    volumes:
      - ./prometheus/home-timeline-service:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  home-timeline-service-exporter:
    image: prom/node-exporter:latest
    hostname: home-timeline-service-exporter
    container_name: home-timeline-service-exporter
    restart: always
    ports:
      - '9311:9100'
    # volumes:
    #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  home-timeline-service:
    image: deathstarbench/social-network-microservices:latest
    # init: true
    hostname: home-timeline-service
    container_name: home-timeline-service
    #    ports:
    #      - 10010:9090
    depends_on:
      jaeger-agent:
        condition: service_started
    restart: always
    entrypoint: HomeTimelineService
    volumes:
      - ./config:/social-network-microservices/config
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  # nginx-thrift-alertmanager:
  #   image: prom/alertmanager
  #   hostname: nginx-thrift-alertmanager
  #   container_name: nginx-thrift-alertmanager
  #   restart: always
  #   volumes:
  #     - ./alertmanager/nginx-thrift-alertmanager.yml:/etc/alertmanager/alertmanager.yml
  #   ports:
  #     - "9234:9093"

  # nginx-thrift-prometheus:
  #   image: prom/prometheus
  #   hostname: nginx-thrift-prometheus
  #   container_name: nginx-thrift-prometheus
  #   restart: always
  #   ports:
  #     - "9115:9090"
  #   volumes:
  #     - ./prometheus/nginx-thrift:/etc/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'

  # nginx-thrift-exporter:
  #   image: prom/node-exporter:latest
  #   hostname: nginx-thrift-exporter
  #   container_name: nginx-thrift-exporter
  #   restart: always
  #   ports:
  #     - '9313:9100'
  #   # volumes:
  #   #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  nginx-thrift:
    image: yg397/openresty-thrift:xenial
    # init: true
    hostname: nginx-thrift
    container_name: nginx-thrift
    ports:
      - 8080:8080
    depends_on:
      jaeger-agent:
        condition: service_started
    restart: always
    volumes:
      - ./nginx-web-server/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ./nginx-web-server/pages:/usr/local/openresty/nginx/pages
      - ./nginx-web-server/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./nginx-web-server/jaeger-config.json:/usr/local/openresty/nginx/jaeger-config.json
      - ./gen-lua:/gen-lua
      - ./docker/openresty-thrift/lua-thrift:/usr/local/openresty/lualib/thrift
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  # media-frontend-alertmanager:
  #   image: prom/alertmanager
  #   hostname: media-frontend-alertmanager
  #   container_name: media-frontend-alertmanager
  #   restart: always
  #   volumes:
  #     - ./alertmanager/media-frontend-alertmanager.yml:/etc/alertmanager/alertmanager.yml
  #   ports:
  #     - "9235:9093"

  # media-frontend-prometheus:
  #   image: prom/prometheus
  #   hostname: media-frontend-prometheus
  #   container_name: media-frontend-prometheus
  #   restart: always
  #   ports:
  #     - "9116:9090"
  #   volumes:
  #     - ./prometheus/media-frontend:/etc/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'

  # media-frontend-exporter:
  #   image: prom/node-exporter:latest
  #   hostname: media-frontend-exporter
  #   container_name: media-frontend-exporter
  #   restart: always
  #   ports:
  #     - '9312:9100'
  #   # volumes:
  #   #   - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  media-frontend:
    image: yg397/media-frontend:xenial
    # init: true
    hostname: media-frontend
    container_name: media-frontend
    ports:
      - 8081:8080
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
    volumes:
      - ./media-frontend/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ./media-frontend/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s










  social-graph-mongodb-alertmanager:
    image: prom/alertmanager
    hostname: social-graph-mongodb-alertmanager
    container_name: social-graph-mongodb-alertmanager
    restart: always
    volumes:
      - ./alertmanager/social-graph-mongodb-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9236:9093"

  social-graph-mongodb-prometheus:
    image: prom/prometheus
    hostname: social-graph-mongodb-prometheus
    container_name: social-graph-mongodb-prometheus
    restart: always
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/social-graph-mongodb:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  social-graph-mongodb-exporter:
    # image: bitnami/mongodb-exporter:latest
    image: percona/mongodb_exporter:0.40.0
    hostname: social-graph-mongodb-exporter
    container_name: social-graph-mongodb-exporter
    restart: always
    # command: ["--log.level=debug"]
    environment:
      - LOG_LEVEL=debug
      - MONGODB_URI=mongodb://social-graph-mongodb:27017
    ports:
      - '9217:9216' # host:container
    # args:
    #   - >
    #     /bin/mongodb_exporter --web.listen-address ":9216"
    #     --mongodb.uri=mongodb://exporter:password@localhost:27017/config? --log.level="debug"  --collect-all
    # command: --mongodb.uri=“mongodb://localhost:27017/admin” --collect-all --discovering-mode
    command: --collect-all

  social-graph-mongodb:
    image: mongo:4.4.6
    command: ["mongod", "-vvvvv"]
    # image: ncmongo
    # init: true
    hostname: social-graph-mongodb
    container_name: social-graph-mongodb
    # ports:
    #   - 27018:27017
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "27017"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  post-storage-mongodb-alertmanager:
    image: prom/alertmanager
    hostname: post-storage-mongodb-alertmanager
    container_name: post-storage-mongodb-alertmanager
    restart: always
    volumes:
      - ./alertmanager/post-storage-mongodb-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9237:9093"

  post-storage-mongodb-prometheus:
    image: prom/prometheus
    hostname: post-storage-mongodb-prometheus
    container_name: post-storage-mongodb-prometheus
    restart: always
    ports:
      - "9092:9090"
    volumes:
      - ./prometheus/post-storage-mongodb:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  post-storage-mongodb-exporter:
    # image: bitnami/mongodb-exporter:latest
    image: percona/mongodb_exporter:0.40.0
    hostname: post-storage-mongodb-exporter
    container_name: post-storage-mongodb-exporter
    restart: always
    # command: ["--log.level=debug"]
    environment:
      - LOG_LEVEL=debug
      - MONGODB_URI=mongodb://post-storage-mongodb:27017
    ports:
      - '9218:9216' # host:container
    command: --collect-all

  post-storage-mongodb:
    image: mongo:4.4.6
    command: ["mongod", "-vvvvv"]
    # image: ncmongo
    # init: true
    hostname: post-storage-mongodb
    container_name: post-storage-mongodb
    #    ports:
    #      - 27019:27017
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "27017"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  user-timeline-mongodb-alertmanager:
    image: prom/alertmanager
    hostname: user-timeline-mongodb-alertmanager
    container_name: user-timeline-mongodb-alertmanager
    restart: always
    volumes:
      - ./alertmanager/user-timeline-mongodb-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9238:9093"

  user-timeline-mongodb-prometheus:
    image: prom/prometheus
    hostname: user-timeline-mongodb-prometheus
    container_name: user-timeline-mongodb-prometheus
    restart: always
    ports:
      - "9093:9090"
    volumes:
      - ./prometheus/user-timeline-mongodb:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  user-timeline-mongodb-exporter:
    # image: bitnami/mongodb-exporter:latest
    image: percona/mongodb_exporter:0.40.0
    hostname: user-timeline-mongodb-exporter
    container_name: user-timeline-mongodb-exporter
    restart: always
    # command: ["--log.level=debug"]
    environment:
      - LOG_LEVEL=debug
      - MONGODB_URI=mongodb://user-timeline-mongodb:27017
    ports:
      - '9219:9216' # host:container
    command: --collect-all

  user-timeline-mongodb:
    image: mongo:4.4.6
    command: ["mongod", "-vvvvv"]
    # image: ncmongo
    # init: true
    hostname: user-timeline-mongodb
    container_name: user-timeline-mongodb
    #    ports:
    #      - 27020:27017
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "27017"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  url-shorten-mongodb-alertmanager:
    image: prom/alertmanager
    hostname: url-shorten-mongodb-alertmanager
    container_name: url-shorten-mongodb-alertmanager
    restart: always
    volumes:
      - ./alertmanager/url-shorten-mongodb-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9239:9093"

  url-shorten-mongodb-prometheus:
    image: prom/prometheus
    hostname: url-shorten-mongodb-prometheus
    container_name: url-shorten-mongodb-prometheus
    restart: always
    ports:
      - "9094:9090"
    volumes:
      - ./prometheus/url-shorten-mongodb:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  url-shorten-mongodb-exporter:
    # image: bitnami/mongodb-exporter:latest
    image: percona/mongodb_exporter:0.40.0
    hostname: url-shorten-mongodb-exporter
    container_name: url-shorten-mongodb-exporter
    restart: always
    # command: ["--log.level=debug"]
    environment:
      - LOG_LEVEL=debug
      - MONGODB_URI=mongodb://url-shorten-mongodb:27017
    ports:
      - '9220:9216' # host:container
    command: --collect-all

  url-shorten-mongodb:
    image: mongo:4.4.6
    command: ["mongod", "-vvvvv"]
    # image: ncmongo
    # init: true
    hostname: url-shorten-mongodb
    container_name: url-shorten-mongodb
    #    ports:
    #      - 27021:27017
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "27017"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  user-mongodb-alertmanager:
    image: prom/alertmanager
    hostname: user-mongodb-alertmanager
    container_name: user-mongodb-alertmanager
    restart: always
    volumes:
      - ./alertmanager/user-mongodb-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9240:9093"

  user-mongodb-prometheus:
    image: prom/prometheus
    hostname: user-mongodb-prometheus
    container_name: user-mongodb-prometheus
    restart: always
    ports:
      - "9095:9090"
    volumes:
      - ./prometheus/user-mongodb:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  user-mongodb-exporter:
    # image: bitnami/mongodb-exporter:latest
    image: percona/mongodb_exporter:0.40.0
    hostname: user-mongodb-exporter
    container_name: user-mongodb-exporter
    restart: always
    # command: ["--log.level=debug"]
    environment:
      - LOG_LEVEL=debug
      - MONGODB_URI=mongodb://user-mongodb:27017
    ports:
      - '9221:9216' # host:container
    command: --collect-all

  user-mongodb:
    image: mongo:4.4.6
    command: ["mongod", "-vvvvv"]
    # image: ncmongo
    # init: true
    hostname: user-mongodb
    container_name: user-mongodb
    # ports:
    #   - 27023:27017
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "27017"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  media-mongodb-alertmanager:
    image: prom/alertmanager
    hostname: media-mongodb-alertmanager
    container_name: media-mongodb-alertmanager
    restart: always
    volumes:
      - ./alertmanager/media-mongodb-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9241:9093"

  media-mongodb-prometheus:
    image: prom/prometheus
    hostname: media-mongodb-prometheus
    container_name: media-mongodb-prometheus
    restart: always
    ports:
      - "9096:9090"
    volumes:
      - ./prometheus/media-mongodb:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  media-mongodb-exporter:
    # image: bitnami/mongodb-exporter:latest
    image: percona/mongodb_exporter:0.40.0
    hostname: media-mongodb-exporter
    container_name: media-mongodb-exporter
    restart: always
    # command: ["--log.level=debug"]
    environment:
      - LOG_LEVEL=debug
      - MONGODB_URI=mongodb://media-mongodb:27017
    ports:
      - '9222:9216' # host:container
    command: --collect-all

  media-mongodb:
    image: mongo:4.4.6
    command: ["mongod", "-vvvvv"]
    # image: ncmongo
    # init: true
    hostname: media-mongodb
    container_name: media-mongodb
    #    ports:
    #      - 27024:27017
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "27017"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s


  social-graph-redis-alertmanager:
    image: prom/alertmanager
    hostname: social-graph-redis-alertmanager
    container_name: social-graph-redis-alertmanager
    restart: always
    volumes:
      - ./alertmanager/social-graph-redis-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9242:9093"

  social-graph-redis-prometheus:
    image: prom/prometheus
    hostname: social-graph-redis-prometheus
    container_name: social-graph-redis-prometheus
    restart: always
    ports:
      - "9097:9090"
    volumes:
      - ./prometheus/social-graph-redis:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  social-graph-redis-exporter:
    image: oliver006/redis_exporter
    hostname: social-graph-redis-exporter
    container_name: social-graph-redis-exporter
    restart: always
    command:
      - '--redis.addr=social-graph-redis:6379'
      # - '--redis.addr=home-timeline-redis:6379'
      # - '--redis.addr=user-timeline-redis:6379'
    ports:
      - '9122:9121' # host:container

  social-graph-redis:
    image: redis
    # image: ncredis
    # init: true
    hostname: social-graph-redis
    container_name: social-graph-redis
    # ports:
    #   - 6380:6379
    restart: always
    environment:
      - REDIS_PROMETHEUS_EXPORTER=yes
      - REDIS_EXPORTER_INCL_SYSTEM_METRICS=true
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "6379"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  home-timeline-redis-alertmanager:
    image: prom/alertmanager
    hostname: home-timeline-redis-alertmanager
    container_name: home-timeline-redis-alertmanager
    restart: always
    volumes:
      - ./alertmanager/home-timeline-redis-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9243:9093"

  home-timeline-redis-prometheus:
    image: prom/prometheus
    hostname: home-timeline-redis-prometheus
    container_name: home-timeline-redis-prometheus
    restart: always
    ports:
      - "9098:9090"
    volumes:
      - ./prometheus/home-timeline-redis:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  home-timeline-redis-exporter:
    image: oliver006/redis_exporter
    hostname: home-timeline-redis-exporter
    container_name: home-timeline-redis-exporter
    restart: always
    command:
      # - '--redis.addr=social-graph-redis:6379'
      - '--redis.addr=home-timeline-redis:6379'
      # - '--redis.addr=user-timeline-redis:6379'
    ports:
      - '9123:9121' # host:container

  home-timeline-redis:
    image: redis
    # image: ncredis
    # init: true
    hostname: home-timeline-redis
    container_name: home-timeline-redis
    # ports:
    #   - 6381:6379
    restart: always
    environment:
      - REDIS_PROMETHEUS_EXPORTER=yes
      - REDIS_EXPORTER_INCL_SYSTEM_METRICS=true
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "6379"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  user-timeline-redis-alertmanager:
    image: prom/alertmanager
    hostname: user-timeline-redis-alertmanager
    container_name: user-timeline-redis-alertmanager
    restart: always
    volumes:
      - ./alertmanager/user-timeline-redis-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9244:9093"

  user-timeline-redis-prometheus:
    image: prom/prometheus
    hostname: user-timeline-redis-prometheus
    container_name: user-timeline-redis-prometheus
    restart: always
    ports:
      - "9099:9090"
    volumes:
      - ./prometheus/user-timeline-redis:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  user-timeline-redis-exporter:
    image: oliver006/redis_exporter
    hostname: user-timeline-redis-exporter
    container_name: user-timeline-redis-exporter
    restart: always
    command:
      # - '--redis.addr=social-graph-redis:6379'
      # - '--redis.addr=home-timeline-redis:6379'
      - '--redis.addr=user-timeline-redis:6379'
    ports:
      - '9124:9121' # host:container

  user-timeline-redis:
    image: redis
    # image: ncredis
    # init: true
    hostname: user-timeline-redis
    container_name: user-timeline-redis
    #    ports:
    #      - 6383:6379
    restart: always
    environment:
      - REDIS_PROMETHEUS_EXPORTER=yes
      - REDIS_EXPORTER_INCL_SYSTEM_METRICS=true
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "6379"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s


  post-storage-memcached-alertmanager:
    image: prom/alertmanager
    hostname: post-storage-memcached-alertmanager
    container_name: post-storage-memcached-alertmanager
    restart: always
    volumes:
      - ./alertmanager/post-storage-memcached-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9245:9093"

  post-storage-memcached-prometheus:
    image: prom/prometheus
    hostname: post-storage-memcached-prometheus
    container_name: post-storage-memcached-prometheus
    restart: always
    ports:
      - "9100:9090"
    volumes:
      - ./prometheus/post-storage-memcached:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  post-storage-memcached-exporter:
    image: prom/memcached-exporter
    command:
      - '--memcached.address=post-storage-memcached:11211'
    #   - '--memcached.address=url-shorten-memcached:11211'
    #   - '--memcached.address=user-memcached:11211'
    #   - '--memcached.address=media-memcached:11211'
    hostname: post-storage-memcached-exporter
    container_name: post-storage-memcached-exporter
    restart: always
    ports:
      - '9151:9150'
    # volumes:
    #   - ./memcached_exporter.yml:/etc/memcached_exporter/memcached_exporter.yml
    # command:
    #   - "--config.file=/etc/memcached_exporter/memcached_exporter.yml"
    # environment:
    #   - memcached_servers=post-storage-memcached:11211,url-shorten-memcached:11211,user-memcached:11211,media-memcached:11211

  post-storage-memcached:
    image: memcached
    # image: ncmemcached
    # init: true
    hostname: post-storage-memcached
    container_name: post-storage-memcached
    command: ["memcached", "-vv"]
    #    ports:
    #      - 11212:11211
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "11211"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  url-shorten-memcached-alertmanager:
    image: prom/alertmanager
    hostname: url-shorten-memcached-alertmanager
    container_name: url-shorten-memcached-alertmanager
    restart: always
    volumes:
      - ./alertmanager/url-shorten-memcached-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9246:9093"

  url-shorten-memcached-prometheus:
    image: prom/prometheus
    hostname: url-shorten-memcached-prometheus
    container_name: url-shorten-memcached-prometheus
    restart: always
    ports:
      - "9101:9090"
    volumes:
      - ./prometheus/url-shorten-memcached:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  url-shorten-memcached-exporter:
    image: prom/memcached-exporter
    command:
    #   - '--memcached.address=post-storage-memcached:11211'
      - '--memcached.address=url-shorten-memcached:11211'
    #   - '--memcached.address=user-memcached:11211'
    #   - '--memcached.address=media-memcached:11211'
    hostname: url-shorten-memcached-exporter
    container_name: url-shorten-memcached-exporter
    restart: always
    ports:
      - '9152:9150'
    # volumes:
    #   - ./memcached_exporter.yml:/etc/memcached_exporter/memcached_exporter.yml
    # command:
    #   - "--config.file=/etc/memcached_exporter/memcached_exporter.yml"
    # environment:
    #   - memcached_servers=post-storage-memcached:11211,url-shorten-memcached:11211,user-memcached:11211,media-memcached:11211

  url-shorten-memcached:
    image: memcached
    # image: ncmemcached
    # init: true
    hostname: url-shorten-memcached
    container_name: url-shorten-memcached
    command: ["memcached", "-vv"]
    #    ports:
    #      - 11213:11211
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "11211"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  user-memcached-alertmanager:
    image: prom/alertmanager
    hostname: user-memcached-alertmanager
    container_name: user-memcached-alertmanager
    restart: always
    volumes:
      - ./alertmanager/user-memcached-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9247:9093"

  user-memcached-prometheus:
    image: prom/prometheus
    hostname: user-memcached-prometheus
    container_name: user-memcached-prometheus
    restart: always
    ports:
      - "9102:9090"
    volumes:
      - ./prometheus/user-memcached:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  user-memcached-exporter:
    image: prom/memcached-exporter
    command:
    #   - '--memcached.address=post-storage-memcached:11211'
    #   - '--memcached.address=url-shorten-memcached:11211'
      - '--memcached.address=user-memcached:11211'
    #   - '--memcached.address=media-memcached:11211'
    hostname: user-memcached-exporter
    container_name: user-memcached-exporter
    restart: always
    ports:
      - '9153:9150'
    # volumes:
    #   - ./memcached_exporter.yml:/etc/memcached_exporter/memcached_exporter.yml
    # command:
    #   - "--config.file=/etc/memcached_exporter/memcached_exporter.yml"
    # environment:
    #   - memcached_servers=post-storage-memcached:11211,url-shorten-memcached:11211,user-memcached:11211,media-memcached:11211

  user-memcached:
    image: memcached
    # image: ncmemcached
    # init: true
    hostname: user-memcached
    container_name: user-memcached
    command: ["memcached", "-vv"]
    #    ports:
    #      - 11214:11211
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "11211"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  media-memcached-alertmanager:
    image: prom/alertmanager
    hostname: media-memcached-alertmanager
    container_name: media-memcached-alertmanager
    restart: always
    volumes:
      - ./alertmanager/media-memcached-alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9248:9093"

  media-memcached-prometheus:
    image: prom/prometheus
    hostname: media-memcached-prometheus
    container_name: media-memcached-prometheus
    restart: always
    ports:
      - "9103:9090"
    volumes:
      - ./prometheus/media-memcached:/etc/prometheus
      # - ./my-alert-rules:/etc/prometheus/rules
      # - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  media-memcached-exporter:
    image: prom/memcached-exporter
    command:
    #   - '--memcached.address=post-storage-memcached:11211'
    #   - '--memcached.address=url-shorten-memcached:11211'
    #   - '--memcached.address=user-memcached:11211'
      - '--memcached.address=media-memcached:11211'
    hostname: media-memcached-exporter
    container_name: media-memcached-exporter
    restart: always
    ports:
      - '9154:9150'
    # volumes:
    #   - ./memcached_exporter.yml:/etc/memcached_exporter/memcached_exporter.yml
    # command:
    #   - "--config.file=/etc/memcached_exporter/memcached_exporter.yml"
    # environment:
    #   - memcached_servers=post-storage-memcached:11211,url-shorten-memcached:11211,user-memcached:11211,media-memcached:11211

  media-memcached:
    image: memcached
    # image: ncmemcached
    # init: true
    hostname: media-memcached
    container_name: media-memcached
    command: ["memcached", "-vv"]
    #    ports:
    #      - 11215:11211
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "11211"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s


  jaeger-agent:
    image: jaegertracing/all-in-one:latest
    # init: true
    hostname: jaeger-agent
    container_name: jaeger-agent
    ports:
      #      - 5775:5775/udp
      #      - 6831:6831/udp
      #      - 6832:6832/udp
      #      - 5778:5778
      - 16686:16686
      #      - 14268:14268
      #      - 9411:9411
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    # healthcheck:
    #   test: ["CMD", "nc", "-vz", "127.0.0.1", "16686"]
    #   interval: 40s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 60s

  webhook-receiver:
    image: webhook-receiver
    hostname: webhook-receiver
    container_name: webhook-receiver
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-webhook-receiver
    ports:
      - "5000:5000"

  # grafana:
  #   image: grafana/grafana
  #   hostname: grafana
  #   container_name: grafana
  #   # restart: unless-stopped
  #   environment:
  #     # increases the log level from info to debug
  #     # - GF_LOG_LEVEL=debug
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_SECURITY_ADMIN_USER=admin
  #   ports:
  #     - '3000:3000'
  #   # volumes:
  #   #   - 'grafana_storage:/var/lib/grafana'
  #   volumes:
  #     - ./grafana:/var/lib/grafana
  #   depends_on:
  #     - prometheus